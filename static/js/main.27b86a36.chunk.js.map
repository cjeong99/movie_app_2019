{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4TA0BeA,MAvBf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OAAO,yBAAKC,UAAU,SAClB,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACjC,yBAAKI,UAAU,cACX,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,UAAUD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIC,IAAKD,EAAOL,UAAU,gBAAgBI,OAC/F,uBAAGJ,UAAU,iBAAiBH,MC2C/BU,G,uNA9CbC,MAAQ,CACNC,WAAU,EACVC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,4DADvC,gBACWJ,EADX,EACHK,KAAOA,KAAOL,OAKrB,EAAKM,SAAS,CAACP,WAAU,EAAOC,WANtB,2C,mFAUVO,KAAKN,c,+BAGE,IAAD,EACwBM,KAAKT,MAA3BC,EADF,EACEA,UAAWC,EADb,EACaA,OACnB,OACE,6BAASV,UAAU,aAChBS,EACD,yBAAKT,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAEF,yBAAKA,UAAU,UACZU,EAAOP,KAAI,SAAAe,GAAK,OACjB,kBAAC,EAAD,CACUZ,IAAKY,EAAMxB,GACXA,GAAIwB,EAAMxB,GACVC,KAAOuB,EAAMvB,KACbC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,kB,GApChBqB,IAAMC,YCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.27b86a36.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Movie({id, year, title, summary, poster, genres}){\n    return <div className=\"movie\">\n        <img src={poster} alt={title} title={title}/>\n            <div className=\"movie_data\">\n                <h3 className=\"movie_title\">{title}</h3>\n                <h5 className=\"movie_year\">{year}</h5>\n                <ul className=\"genres\">{genres.map((genre, index) => <li key={index} className=\"genres_genre\">{genre}</li>)}</ul>\n                <p className=\"movie_summary\">{summary}</p>   \n\n            </div>\n        </div>\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n\n};\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\nimport \"./Movie.css\";\n\nclass App extends React.Component{\n  state = {\n    isLoading:true,\n    movies: []\n  };\n//loading will take a time so need a keyword to wait\n  getMovies = async () => {\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    //console.log(movies);\n    //const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    //console.log(movies.data.data.movies);\n    //this.setState({movies: movies})\n    this.setState({isLoading:false, movies})\n  }\n  componentDidMount(){\n\n    this.getMovies();\n    //fetch or axios (preferred)\n  }\n  render(){\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? \n        <div className=\"loader\">\n          <span className=\"loader_text\">Loading...</span>\n        </div>  : \n        <div className=\"movies\">\n          {movies.map(movie => (\n          <Movie \n                    key={movie.id} \n                    id={movie.id} \n                    year ={movie.year} \n                    title={movie.title} \n                    summary={movie.summary} \n                    poster={movie.medium_cover_image} \n                    genres={movie.genres}/>\n          ))}\n        </div>\n    }\n</section>\n    );\n\n    \n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n/*              component*/\n/** Component is function to return HTML*/\nReactDOM.render(<App />, document.getElementById('potato'));\n\n\n"],"sourceRoot":""}